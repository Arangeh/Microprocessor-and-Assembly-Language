/*
 * AssemblerHW3Q4.asm
 *
 *  Created: 3/23/2019 3:11:52 PM
 *   Author: Alireza
 */ 
 
.DEF INIT_VAL=R17
.DEF TEMP = R18

JMP RESET

RESET:
;INITIALLY STACK POINTER POINTS TO THE RAMEND. HOWEVER, IT'S BEEN MIDIFIED ACCORDING TO THE QUESTION(PART C)
LDI R16, HIGH(RAMEND)
OUT SPH, R16
LDI R16,LOW(RAMEND)
OUT SPL, R16
CLR INIT_VAL
;COMMENT/UNCOMMENT THE FOLLOWING LINE IN ORDER TO CHANGE THE OUTPUT
;SER INIT_VAL; OR EQUIVALENTLY LDI INIT_VAL, FF
LDI ZH, 0X00
LDI ZL, 0X70;NOW, REGISTER [Z] POINTS TO 0X70

;THE FOLLOWING 2 LINES ARE USED FOR READING FINAL SPL VALUE IN PARTc
LDI R27, 0xFF
OUT ddrB, R27
CLR R29
JMP MAIN

MAIN:
//SBI OX30, 6

OUT 0X30, INIT_VAL
NOP
IN R16, 0X30
MOV R0, R16
SWAP R0
MOV R16, R0
CBR R16, 0XF7;THE THIRD BIT WILL BE CLEARED. [HINT: CBR A,B = A <= A . ($FF - B)]
MOV R0, R16;VALUE OF R16 HAS FURTHER BEEN USED IN PARTc. IT WILL HAVE KEPT IT'S VALUE UNTILL THEN


SBRS R0, 6
CALL PARTa;IF 6TH BIT OF R0 = 0 THEN CALL PARTa

SBRC R0, 6
CALL PARTb;IF 6TH BIT OF R0 = 1 THEN CALL PARTb

JMP PARTc

PARTa:
STD Z+0X20, R0
RET


PARTb:

LDI TEMP,5
MUL R0,TEMP; R1:R0 <= R0 * 5
;[R1:R0] is to be rotated
LSR R0
ROR R1
BRCS CARRY_ROTATE;

AFTER:

OUT 0X30, R0
OUT 0X30, R1
SER R29
RET

CARRY_ROTATE:
MOV R19, R0
SBR R19, 0X80
MOV R0, R19
JMP AFTER

PARTc:
LDI TEMP, 0X00
OUT SPH, TEMP
LDI TEMP, 0X90
OUT SPL, TEMP
PUSH R16;VALUE OF R0 IN PARTa

SBRS R29, 6; WE MAKE SURE PARTb IS DONE EXACTLY ONE TIME, IN ORDER FOR PROPER VALUES OF R1 AND R0 FROM PARTb TO BE STORED IN STACK 
CALL PARTb
PUSH R1
PUSH R0
IN R2, SPL
OUT PORTB, R2;WE SEE THE STACK POINTER'S VALUE HAS BEEN DECREASED BY 3. THIS IS BECAUSE OF HAVING WRITTEN 3 BYTES ON TOP OF STACK
JMP LOOP


LOOP:
JMP LOOP